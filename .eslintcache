[{"D:\\react\\react1\\src\\index.js":"1","D:\\react\\react1\\src\\reportWebVitals.js":"2","D:\\react\\react1\\src\\App.js":"3","D:\\react\\react1\\src\\pages\\pages.js":"4","D:\\react\\react1\\src\\pages\\pegawai.js":"5","D:\\react\\react1\\src\\pages\\login.js":"6","D:\\react\\react1\\src\\pages\\home.js":"7","D:\\react\\react1\\src\\components\\navbar.js":"8","D:\\react\\react1\\src\\pages\\register.js":"9"},{"size":547,"mtime":1611205930851,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611194123073,"results":"12","hashOfConfig":"11"},{"size":267,"mtime":1613025188842,"results":"13","hashOfConfig":"11"},{"size":496,"mtime":1613395897291,"results":"14","hashOfConfig":"11"},{"size":7730,"mtime":1613026040700,"results":"15","hashOfConfig":"11"},{"size":3199,"mtime":1613397809705,"results":"16","hashOfConfig":"11"},{"size":2560,"mtime":1613025388178,"results":"17","hashOfConfig":"11"},{"size":740,"mtime":1613441428247,"results":"18","hashOfConfig":"11"},{"size":3595,"mtime":1613397779732,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1uuhzag",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\react\\react1\\src\\index.js",[],["40","41"],"D:\\react\\react1\\src\\reportWebVitals.js",[],"D:\\react\\react1\\src\\App.js",[],"D:\\react\\react1\\src\\pages\\pages.js",[],"D:\\react\\react1\\src\\pages\\pegawai.js",["42"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport NavBar from '../components/navbar'\r\nimport {Button, Modal, Table, Card, Form} from 'react-bootstrap'\r\n\r\nclass Pegawai extends React.Component {\r\n    constructor() {  \r\n        super();  \r\n        this.state = {  \r\n            pegawai: [], \r\n            id_pegawai: \"\",\r\n            nama_pegawai: \"\", \r\n            alamat: \"\",\r\n            action: \"\",\r\n            search: \"\",        \r\n            isModalOpen: false\r\n        }  \r\n        if (localStorage.getItem(\"token\")) {\r\n          this.state.token = localStorage.getItem(\"token\")\r\n        } else {\r\n          window.location = \"/login\"\r\n        }\r\n\r\n        this.headerConfig.bind(this)\r\n    }\r\n\r\n    headerConfig = () => {\r\n      let header = {\r\n        headers: { Authorization: `Bearer ${this.state.token}` }\r\n      }\r\n      return header\r\n    }\r\n    bind = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n    handleAdd = () => {\r\n        this.setState({\r\n            id_pegawai: \"\",\r\n            nama_pegawai: \"\",\r\n            alamat: \"\",\r\n            action: \"insert\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n    handleEdit = (item) => {\r\n        this.setState({\r\n            id_pegawai: item.id_pegawai,\r\n            nama_pegawai: item.nama_pegawai,\r\n            alamat: item.alamat,\r\n            action: \"update\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n    handleClose = (item) => {\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n    getPegawai = () => {\r\n        let url = \"http://localhost:2200/pegawai\";\r\n        // mengakses api untuk mengambil data pegawai\r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array pegawai\r\n          this.setState({pegawai: response.data.pegawai});\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    findPegawai = (event) => {\r\n        let url = \"http://localhost:2200/pegawai\";\r\n        if (event.keyCode === 13) {\r\n        //   menampung data keyword pencarian\r\n          let form = {\r\n            find: this.state.search\r\n          }\r\n          // mengakses api untuk mengambil data pegawai\r\n          // berdasarkan keyword\r\n          axios.post(url, form , this.headerConfig())\r\n          .then(response => {\r\n            // mengisikan data dari respon API ke array pegawai\r\n            this.setState({pegawai: response.data.pegawai});\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getPegawai()\r\n    }\r\n    handleSave = (event) => {\r\n        event.preventDefault();\r\n        /* menampung data nip, nama dan alamat dari Form\r\n        ke dalam FormData() untuk dikirim  */\r\n        let url = \"\";\r\n        if (this.state.action === \"insert\") {\r\n          url = \"http://localhost:2200/pegawai/save\"\r\n        } else {\r\n          url = \"http://localhost:2200/pegawai/update\"\r\n        }\r\n    \r\n        let form = {\r\n          id_pegawai: this.state.id_pegawai,\r\n          nama_pegawai: this.state.nama_pegawai,\r\n          alamat: this.state.alamat\r\n        }\r\n    \r\n        // mengirim data ke API untuk disimpan pada database\r\n        axios.post(url, form , this.headerConfig())\r\n        .then(response => {\r\n          // jika proses simpan berhasil, memanggil data yang terbaru\r\n          this.getPegawai();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n        // menutup form modal\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n    Drop = (id_pegawai) => {\r\n        let url = \"http://localhost:2200/pegawai/\" + id_pegawai;\r\n        // memanggil url API untuk menghapus data pada database\r\n        if (window.confirm('Apakah Anda yakin ingin menghapus data ini?')) {\r\n          axios.delete(url, this.headerConfig())\r\n          .then(response => {\r\n            // jika proses hapus data berhasil, memanggil data yang terbaru\r\n            this.getPegawai();\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getPegawai()\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <NavBar />\r\n                <Card>\r\n                <Card.Header className=\"card-header bg-info text-white\" align={'center'}>Data Pegawai</Card.Header>\r\n                <Card.Body>\r\n                <input type=\"text\" className=\"form-control mb-2\" name=\"search\" value={this.state.search} onChange={this.bind} onKeyUp={this.findPegawai} placeholder=\"Pencarian...\" />\r\n                <Button variant=\"success\" onClick={this.handleAdd}>\r\n                    Tambah Data\r\n                </Button>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>  \r\n                            <th>Nama</th>  \r\n                            <th>Alamat</th>  \r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.pegawai.map((item,index) => {  \r\n                        return (  \r\n                        <tr key={index}>  \r\n                            <td>{item.id_pegawai}</td>  \r\n                            <td>{item.nama_pegawai}</td>  \r\n                            <td>{item.alamat}</td>  \r\n                            <td>  \r\n                            <Button className=\"btn btn-sm btn-info m-1\" data-toggle=\"modal\"  \r\n                            data-target=\"#modal\" onClick={() => this.handleEdit(item)}>  \r\n                                Edit  \r\n                            </Button>  \r\n                            <Button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.Drop(item.id_pegawai)}>  \r\n                                Hapus  \r\n                            </Button>  \r\n                            </td>  \r\n                        </tr>  \r\n                        );  \r\n                    })}\r\n                    </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n                </Card>\r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Form Pegawai</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Form onSubmit={this.handleSave}>\r\n                    <Modal.Body>\r\n                        ID  \r\n                        <input type=\"number\" name=\"id_pegawai\" value={this.state.id_pegawai} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Nama  \r\n                        <input type=\"text\" name=\"nama_pegawai\" value={this.state.nama_pegawai} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Alamat  \r\n                        <input type=\"text\" name=\"alamat\" value={this.state.alamat} onChange={this.bind}  \r\n                        className=\"form-control\" required />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-sm btn-success\" type=\"submit\">  \r\n                        Simpan  \r\n                        </button>\r\n                    </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default Pegawai\r\n","D:\\react\\react1\\src\\pages\\login.js",[],"D:\\react\\react1\\src\\pages\\home.js",[],"D:\\react\\react1\\src\\components\\navbar.js",[],"D:\\react\\react1\\src\\pages\\register.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":141,"column":5,"nodeType":"49","messageId":"50","endLine":144,"endColumn":6},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","unexpected","no-global-assign","no-unsafe-negation"]